#!/usr/bin/env bash

# takes a Canon image as reference time, and then
# looks up the rpi image from the logs

filename=$(basename $1)

tempname=/dev/shm/$filename
cp $1 $tempname

# imagemagick uses /tmp as default TMPDIR, so tell it to use something else:
export TMPDIR=/dev/shm/

# adjust the time. add 5093976s
exiftool -AllDates+='0:0:5093976' $tempname

# get current time
timestamp_search=$(identify -format "%[EXIF:DateTime]" $tempname | awk '{print $2}' | sed s/://g)

# find matching gps sentence
fgrep "GNGGA,$timestamp_search" gps-log
GPSLatitude=$(fgrep "GNGGA,$timestamp_search" gps-log | cut -d, -f3)
GPSLatitudeRef=$(fgrep "GNGGA,$timestamp_search" gps-log | cut -d, -f4)
GPSLongitude=$(fgrep "GNGGA,$timestamp_search" gps-log | cut -d, -f5)
GPSLongitudeRef=$(fgrep "GNGGA,$timestamp_search" gps-log | cut -d, -f6)
GPSAltitude=$(fgrep "GNGGA,$timestamp_search" gps-log | cut -d, -f10)
GPSAltitudeRef=$(fgrep "GNGGA,$timestamp_search" gps-log | cut -d, -f11)

# put GPS data into tag
cmd="exiftool  \
    -GPSLatitude=$GPSLatitude \
    -GPSLatitudeRef=$GPSLatitudeRef \
    -GPSLongitude=$GPSLongitude \
    -GPSLongitudeRef=$GPSLongitudeRef \
    -GPSAltitude=$GPSAltitude \
    $tempname"
$cmd

# force orientation to horizontal; some frames are sideways but this messes up output consistency
exiftool -Orientation#=1 $tempname

# now seek back in syslog and find sensor data...
most_recent_tx=$(fgrep "GNGGA,$timestamp_search" syslog -B 50 | fgrep "TX: \$\$SAM" | fgrep -v NOFIX | tail -n 1 | cut -d\  -f7-)
sentence_id=$(echo $most_recent_tx | cut -d, -f2)
external_temperature=$(echo $most_recent_tx | cut -d, -f8)
pressure=$(echo $most_recent_tx | cut -d, -f9)
humidity=$(echo $most_recent_tx | cut -d, -f10)
internal_temperature=$(echo $most_recent_tx | cut -d, -f11 | cut -d\* -f1) # FIXME wrapping

# and then seek back in syslog to find relevant rpi photo
most_recent_rpi_photo_id=$(fgrep "GNGGA,$timestamp_search" syslog -B 50 | fgrep "Camera: taking picture" | tail -n 1 | cut -d/ -f6)
most_recent_rpi_photo="../SAM-tracker-sdcard/photos/3/$most_recent_rpi_photo_id"
if [ "$most_recent_rpi_photo_id" == "" ]; then
    most_recent_rpi_photo="blank-rpi-frame.jpg"
fi
echo "Pi photo: $most_recent_rpi_photo"

# format string to pass to identify
format="
Altitude=$GPSAltitude
$GPSLatitude $GPSLatitudeRef, $GPSLongitude $GPSLongitudeRef
TX id: $sentence_id
External: $external_temperature°C, ${pressure}mB, $humidity%%RH
Internal: $internal_temperature°C
%[EXIF:DateTime]
Exposure Time=%[exif:ExposureTime]
ISO=%[exif:ISOSpeedRatings]
Aperture F=%[exif:FNumber]"

# do the work
# note the identify subprocess inline...

convert $tempname \
    -pointsize 100 -fill black -gravity southwest \
    $most_recent_rpi_photo -adjoin -smush 0x0 \
    -gravity southeast \
    -annotate +0+0 "`identify -format \"$format\" \$tempname`" \
    output-combined/$filename

rm $tempname*
